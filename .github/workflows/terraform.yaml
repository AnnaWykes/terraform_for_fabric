name: Terraform Azure Deployment

# Trigger the workflow on push to main or PR to main
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    # Set environment variables for Terraform authentication
    env:
      TF_VAR_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      TF_VAR_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
      TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.8'  # specify the Terraform version you need

      # Step 3: Set up Azure credentials using the service principal ?
      - name: Set up Azure credentials
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 4: Initialize Terraform
      - name: Terraform Init
        run: terraform init 
        working-directory: fabric/terraform/dev

      # Step 5: Run Terraform Plan
      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: fabric/terraform/dev

      # Step 6: Apply the Terraform plan (auto-approve)
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        if: github.event_name == 'push'  # Only apply on push to main
        working-directory: fabric/terraform/dev
